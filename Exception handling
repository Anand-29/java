EXCEPTIONAL HANDLING

Array element_Exception handling_Java

Write a Program to print the array element using or implementing exception handling.

Input Format :

Input consist of an Integers

Output Format :

Output consist of a Strings and Integer

 

Sample Input :

5

10 20 30 4 5 

10

Sample Output :

java.lang.ArrayIndexOutOfBoundsException: 10

Input (stdin)

5
10 20 30 4 5
2


Output (stdout)

30

 

Program :-

import java.util.Scanner;

class Main{

  public static void main(String[] args){

    Scanner sin = new Scanner(System.in);

    int n = sin.nextInt();

    int arr[] = new int[n];

    for(int i=0; i<n; i++){

      arr[i] = sin.nextInt();

    }

    int m = sin.nextInt();

    try{

      System.out.println(arr[m]);

    }

    catch(ArrayIndexOutOfBoundsException e){

      System.out.println(e);

    }

  }

}

Divide two no_Exception handling_Java

Write a Program to divide two numbers.


Input Format :

Input consist of an Integer

Output Format :

Output consist of a Float and Strings

 

Sample Input :

10 20

Sample Output :

0.5

Input (stdin)

10 0


Output (stdout)

Infinity

 

Program :-

import java.util.Scanner;

class Main{

  public static void main(String[] args){

    Scanner sin = new Scanner(System.in);

    double a = sin.nextInt();

    double b = sin.nextInt();

    try{

      System.out.print((float) a / b);

    }

    catch(ArithmeticException e){

      System.out.println("Infinity");

    }

    return;

  }

}

Digit_Exception handling_Java

Program to find the total count of numbers between the given range that is made up only with digits less than 5. 

Example: 1234 is a number which is made of digits less than 5. 2532 is a number which is having a 

digit greater than 5 so we will not consider it.


Input Format :

Input consist of an Integer

Output Format :

Output consist of an Integer

 

Sample Input :

1 4300

Sample Output :

575

Input (stdin)

0 896


Output (stdout)

125

 

Program :-

import java.util.*;    

class Main

{ 

    public static void main(String[] args) 

    {  

        Scanner obj = new Scanner(System.in);

        int start = obj.nextInt();

        int end = obj.nextInt();

        int c=0,temp,f;

        try

        { 

            for(int i=start;i<=end;i++)

            {      

                f=0;

                temp=i;

                while(temp!=0)

                {

                    int r=temp%10;

                    if(r>=5)

                    f=1;

                    temp/=10;

                }

                if(f==0)

                c++;

            }

            

        }

        catch(Exception e) 

        { 

            System.out.print("Divide by zero"); 

        } 

        finally 

        {

            System.out.printf("%d",c);

        }   

    }    

}

Given Triangle_Exception handling_Java

Program to find the total number of triangles in the given triangle. 

Input: The first input is no of baselines The second input is no of horizontal lines from the top centre of the triangle.


Input Format :

Input consist of an Integer

Output Format :

Output consist of an Integer

 

Sample Input :

3 4 

Sample Output :

18

Input (stdin)

2 3


Output (stdout)

6

 

Program :-

import java.util.Scanner;

class Main{

  public static void main(String[] args){

    Scanner sin = new Scanner(System.in);

    int i,sum=1;

    int a = sin.nextInt();

    int b = sin.nextInt();

    try{

      for(i=1;i<=b-1;i++)

      {

        sum = sum+i;

      }

      System.out.print((int)(a*sum)-a);

    }

    catch(ArithmeticException e){

      System.out.println("0");

    }

    return;

  }

}

Working days_Exception handling_Java

n1 people worked for d1 days for h1 hours and completed w1 works. 

Write a program to find work done by n2 people worked for d2 days and h2 hours.


Input Format :

Input consist of an Integer

Output Format :

Output consist of an Float

 

Sample Input :

10 10 10 10

8 8 8 

Sample Output :

5.12

Input (stdin)

1 5 8 9
2 6 8


Output (stdout)

21.6

 

Program :-

import java.util.Scanner;

class Main{

  public static void main(String[] args){

    Scanner sin = new Scanner(System.in);

    double a = sin.nextInt();

    double b = sin.nextInt();

    double c = sin.nextInt();

    double d = sin.nextInt();

    double f = sin.nextInt();

    double g = sin.nextInt();

    double h = sin.nextInt();

    try{

      System.out.print((h*g*f*d)/(a*b*c));

    }

    catch(ArithmeticException e){

      System.out.println("Infinity");

    }

    return;

  }

}

Piece of Work_Exception handling_Java

A can do a piece of work in x days. B can do the same piece of work in y days. 

Write a program to find if both are working together, how long they will take to finish it. 

Input format: x is an integer stating the A working days. y is an integer stating the B working days.


Input Format :

Input consist of an Integer

Output Format :

Output consist of a Float

 

Sample Input :

10 20

Sample Output :

6.666666666666667

Input (stdin)

55 89


Output (stdout)

33.99305555555556

 

Program :-

import java.util.Scanner;

class Main{

  public static void main(String[] args){

    Scanner sin = new Scanner(System.in);

    double a = sin.nextInt();

    double b = sin.nextInt();

    try{

      System.out.print((float) (a*b)/(a+b));

    }

    catch(ArithmeticException e){

      System.out.println("Infinity");

    }

    return;

  }

}

Average speed_Exception handling_Java

A person travels from home to the office at the speed of x kmph and return home at the speed of y kmph, 

then write a program to find the average speed of the entire journey.


Input Format :

Input consist of an Integer

Output Format :

Output consist of a Float

 

Sample Input :

15 65

Sample Output :

24.375

Input (stdin)

30 70


Output (stdout)

42.0

 

Program :-

import java.util.Scanner;

class Main{

  public static void main(String[] args){

    Scanner sin = new Scanner(System.in);

    double a = sin.nextInt();

    double b = sin.nextInt();

    try{

      System.out.print((float) (2*a*b)/(a+b));

    }

    catch(ArithmeticException e){

      System.out.println("Infinity");

    }

    return;

  }

}

Travelling_Exception handling _Java

You are in need of Rs.10000 and decide to borrow it from your friend who lives 200km away from your place. 

Both of you are travelling towards each other. Your friend is travelling in his bike at a speed of x kmph and you 

are travelling at a speed of y kmph. Write a program to find at what time you two will meet?


Input format :

x and y are integers in kmph

Output format :

Time in hrs (double)

 

Sample Input :

25 60

Sample Output :

2.3529411764705883

Input (stdin)

12 56


Output (stdout)

2.9411764705882355

 

Program :-

import java.util.Scanner;

class Main{

  public static void main(String[] args){

    Scanner sin = new Scanner(System.in);

    double a = sin.nextInt();

    double b = sin.nextInt();

    try{

      System.out.print(200/(a+b));

    }

    catch(ArithmeticException e){

      System.out.println("Infinity");

    }

    return;

  }

}

Train_Exception handling_Java

Two trains are d km apart and are travelling towards each other at a speed of x kmph and y kmph respectively. 

From one train a mosquito takes off, flies straight above the rails to the other trains at the speed of z kmph, 

bounces off it and flies back to the first train. The mosquito continues to do this till the two trains crash into each other

 and the mosquito is smashed. Write a program to find the distance travelled by the mosquito before it gets smashed.


Input Format :

Input consist of an Integer

Output Format :

Input consist of a Float

 

Sample Input :

200 50 50 75

Sample Output :

150.0

Input (stdin)

12 5 9 6


Output (stdout)

5.142857142857142

 

Program :-

import java.util.Scanner;

class Main{

  public static void main(String[] args){

    Scanner sin = new Scanner(System.in);

    double a = sin.nextInt();

    double b = sin.nextInt();

    double c = sin.nextInt();

    double d = sin.nextInt();

    try{

      System.out.print((a/(b+c))*d);

    }

    catch(ArithmeticException e){

      System.out.println("Infinity");

    }

    return;

  }

}

Opposite direction_Exception handling_Java

You are in need of Rs.10000 and decide to borrow it from your friend who lives 200km away from your place.

 Your friend is already on the way (which is in opposite to your direction) to his office and you decided to chase him out.

 Your friend is travelling in his bike at a speed of x kmph and you are travelling at a speed of y kmph. 

Write a program to find at what time you two will meet?


Input Format :

x and y are integers in kmph

Output Format :

Time in hrs (double)

 

Sample Input :

15 89 500

Sample Output :

Will never meet

Input (stdin)

50 20 250


Output (stdout)

8.333333333333334

 

Program :-

import java.util.*; 

import java.lang.Math; 

class Main

{ 

    public static void main(String[] args) 

    {  

        Scanner obj = new Scanner(System.in);

        int x = obj.nextInt();

        int y = obj.nextInt();

        int d = obj.nextInt();

       

        double ans=0;

        try

        { 

            if(x<y)

            {

               System.out.println("Will never meet"); 

               System.exit(0);

            }

            ans = d/(double)(x-y);  

            System.out.println(Math.abs(ans)); 

        }

        catch(Exception e) 

        { 

            System.out.print("Divide by zero"); 

        } 

    }    

}
